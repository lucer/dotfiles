" set encoding=utf8
" Normally we use vim-extensions. If you want true vi-compatibility
" remove change the following statements
set nocompatible	" Use Vim defaults (much better!)
set backspace=2		" allow backspacing over everything in insert mode
" Now we set some defaults for the editor 
set noautoindent		" always set autoindenting off 
set nosmartindent		" always set autoindenting off 
set nocindent		" always set autoindenting off 
set textwidth=0		" Don't wrap words by default
set nobackup		" Don't keep a backup file
set viminfo='20,\"50	" read/write a .viminfo file, don't store more than
			" 50 lines of registers
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set softtabstop=4
set tabstop=4
set shiftwidth=4
set paste
set showmatch
set noexpandtab
highlight Comment ctermfg=darkgreen
" set list lcs=tab:>-,eol:$
" hi SpecialKey ctermbg=darkgreen guibg=darkgreen
" set list

" F1 - line numbers
imap <F1> <Esc>:set<Space>nu!<CR>a
nmap <F1> :set<Space>nu!<CR>
" F2 - expandtab/noexpandabs
imap <F2> <Esc>:set<Space>et<CR>a
nmap <F2> :set<Space>et<CR>
" F3 - listchars
imap <F3> <Esc>:set<Space>list<CR>
nmap <F3> :set<Space>list!<CR>

map <F4> [I:let nr = input("Which one: ")<Bar>exe "normal " . nr ."[\t"<CR>

set ic
set is
set hls
" tab/space
autocmd FileType python set tabstop=4|set shiftwidth=4|set expandtab
autocmd FileType php set tabstop=4|set shiftwidth=4|set expandtab|set noeol|set binary
autocmd FileType haml set tabstop=2|set shiftwidth=2|set expandtab
autocmd FileType javascript set tabstop=2|set shiftwidth=2|set expandtab
autocmd FileType xml set tabstop=2|set shiftwidth=2|set expandtab
autocmd FileType html set tabstop=2|set shiftwidth=2|set expandtab
autocmd FileType yaml set tabstop=2|set shiftwidth=2|set expandtab
autocmd FileType haskell set tabstop=8|set softtabstop=4|set shiftwidth=4|set expandtab|set shiftround
set tabpagemax=15
set showtabline=2
nmap <M-Right> gt
nmap <M-Left> gT
imap <M-Right> <C-O>gt
imap <M-Left> <C-O>gT

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

" We know xterm-debian is a color terminal
if &term =~ "xterm-debian" || &term =~ "xterm-xfree86"
  set t_Co=16
  set t_Sf=[3%dm
  set t_Sb=[4%dm
endif

" Make p in Visual mode replace the selected text with the "" register.
vnoremap p <Esc>:let current_reg = @"<CR>gvdi<C-R>=current_reg<CR><Esc>

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" 3 lines enables syntax highlighting by default.
if has("syntax") && &t_Co > 2
	syntax on
endif

" Debian uses compressed helpfiles. We must inform vim that the main
" helpfiles is compressed. Other helpfiles are stated in the tags-file.
" set helpfile=$VIMRUNTIME/doc/help.txt.gz

if has("autocmd")

 " Enabled file type detection
 " Use the default filetype settings. Also load indent files to automatically
 " do language-dependent indenting
 " filetype plugin indent on

 " Also, support editing of gzip-compressed files. DO NOT REMOVE THIS!
 " This is also used when loading the compressed helpfiles.

endif " has ("autocmd")

" Some Debian-specific things
augroup filetype
  au BufRead reportbug.*		set ft=mail
augroup END

" The following are commented out as they cause vim to behave a lot
" different from regular vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set incsearch		" Incremental search
set autowrite		" Automatically save before commands like :next and :make
set wildmenu
set wildmode=list:longest,full
set tags=tags
" set laststatus=1
" set statusline=%F%m%r%h%w\ [EOL=%{&ff}]\ [TYPE=%Y]\ [ORD=\%03.3b\ 0x\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]

" Mail group
augroup mail
    autocmd!
    autocmd FileType mail set textwidth=70 wrap nonumber
    autocmd FileType mail :nmap <F8> :w<CR>:!aspell -e -c %<CR>:e<CR>
augroup END

" wiki markup
"au BufRead,BufNewFile *.wiki setfiletype Wikipedia
"au BufRead,BufNewFile *.wikipedia.org.* setfiletype Wikipedia

" Only do this part when compiled with support for autocommands
if has("autocmd")
  " In text files, always limit the width of text to 78 characters
  autocmd BufRead *.txt set tw=78
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal! g'\"" |
  \ endif
endif

" Try the following if your GUI uses a dark background.
"highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
highlight ExtraWhitespace ctermbg=red guibg=red
" Show trailing whitespace:
match ExtraWhitespace /\s\+$/

" Show trailing whitepace and spaces before a tab:
"match ExtraWhitespace /\s\+$\| \+\ze\t/

" Show tabs that are not at the start of a line:
"match ExtraWhitespace /[^\t]\zs\t\+/

" Show spaces used for indenting (so you use only tabs for indenting).
"match ExtraWhitespace /^\t*\zs \+/
